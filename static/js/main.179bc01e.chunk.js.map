{"version":3,"sources":["assets/creditCardImg.png","assets/cardBack.png","components/card/card.jsx","components/form/form.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","info","cardHolder","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","monthSelector","yearSelector","cvv1","cvv2","cvv3","className","id","src","CardImg","alt","CardBack","CardForm","state","handleChange","bind","numbersOnly","makeActive","formSubmit","flipCard","months","document","getElementById","years","monthNum","toString","option","createElement","value","text","add","yearNum","slice","e","preventDefault","window","alert","elements","Array","from","getElementsByClassName","backEle","card","card2","target","forEach","ele","style","visibility","classList","setTimeout","remove","this","actives","length","element","replace","split","key","setState","onClick","autoComplete","onSubmit","type","name","maxlength","onKeyPress","onChange","selected","disabled","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.179bc01e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/creditCardImg.30c29b2b.png\";","module.exports = __webpack_public_path__ + \"static/media/cardBack.0961520f.png\";","import React from 'react';\nimport CardImg from './../../assets/creditCardImg.png';\nimport CardBack from './../../assets/cardBack.png';\nimport './card.css';\n\nexport default function Card(props) {\n  let {\n    cardHolder,\n    one,\n    two,\n    three,\n    four,\n    five,\n    six,\n    seven,\n    eight,\n    nine,\n    ten,\n    eleven,\n    twelve,\n    thirteen,\n    fourteen,\n    fifteen,\n    sixteen,\n    monthSelector,\n    yearSelector,\n    cvv1,\n    cvv2,\n    cvv3\n  } = props.info;\n\n  return (\n    <div className='cardSectionOverall'>\n      <div className='flip-card'>\n        <div className='flip-card-front'>\n          <img className='cardImg' id='cardImg' src={CardImg} alt='' />\n        </div>\n        <div className='flip-card-back'>\n          <img className='cardImg' id='cardImg' src={CardBack} alt='' />\n        </div>\n      </div>\n      <div className='cardHolderCard'>\n        <p className='cardHolderTitle text'>Cardholder</p>\n        <p className='nameInput text'>{cardHolder}</p>\n      </div>\n      <div className='numberInputCard'>\n        <div className='firstSect cardSection'>\n          <p className='oneCard text'>{one || '#'}</p>\n          <p className='twoCard text'>{two || '#'}</p>\n          <p className='threeCard text'>{three || '#'}</p>\n          <p className='fourCard text'>{four || '#'}</p>\n        </div>\n        <div className='secondCard cardSection'>\n          <p className='fiveCard text'>{five || '#'}</p>\n          <p className='sixCard text'>{six || '#'}</p>\n          <p className='sevenCard text'>{seven || '#'}</p>\n          <p className='eightCard text'>{eight || '#'}</p>\n        </div>\n        <div className='thirdCard cardSection'>\n          <p className='nineCard text'>{nine || '#'}</p>\n          <p className='tenCard text'>{ten || '#'}</p>\n          <p className='elevenCard text'>{eleven || '#'}</p>\n          <p className='twelveCard text'>{twelve || '#'}</p>\n        </div>\n        <div className='fourthCard cardSection'>\n          <p className='thirteenCard text'>{thirteen || '#'}</p>\n          <p className='fourteenCard text'>{fourteen || '#'}</p>\n          <p className='fifteenCard text'>{fifteen || '#'}</p>\n          <p className='sixteenCard text'>{sixteen || '#'}</p>\n        </div>\n      </div>\n      <div className='expirationSectionCard'>\n        <p className='expirationTitle text'>Expires</p>\n        <div className='expirationChange'>\n          <p className='expItm text'>{monthSelector || 'MM'}</p>\n          <p className='expItm text'>/</p>\n          <p className='expItm text'>{yearSelector || 'YY'}</p>\n        </div>\n      </div>\n      <div className='cvvCard' id='backText'>\n        <p>{cvv1 || '#'}</p>\n        <p>{cvv2 || '#'}</p>\n        <p>{cvv3 || '#'}</p>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Card from '../card/card.jsx';\nimport './form.css';\n\nclass CardForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.handleChange = this.handleChange.bind(this);\n    this.numbersOnly = this.numbersOnly.bind(this);\n    this.makeActive = this.makeActive.bind(this);\n    this.formSubmit = this.formSubmit.bind(this);\n    this.flipCard = this.flipCard.bind(this);\n  }\n\n  componentDidMount() {\n    let months = document.getElementById('monthSelector');\n    let years = document.getElementById('yearSelector');\n\n    for (let monthNum = 1; monthNum <= 12; monthNum++) {\n      if (monthNum < 10) monthNum = '0' + monthNum.toString();\n      let option = document.createElement('option');\n      option.value = monthNum;\n      option.text = monthNum;\n      months.add(option);\n    }\n\n    for (let yearNum = 2019; yearNum <= 2030; yearNum++) {\n      let option = document.createElement('option');\n      option.value = yearNum.toString().slice(2);\n      option.text = yearNum;\n      years.add(option);\n    }\n  }\n\n  formSubmit(e) {\n    e.preventDefault();\n    window.alert('Wow, cool card!');\n  }\n\n  flipCard(e) {\n    let elements = Array.from(document.getElementsByClassName('text'));\n    let backEle = document.getElementById('backText');\n    let card = document.getElementsByClassName('cardSectionOverall')[0];\n    let card2 = document.getElementsByClassName('flip-card')[0];\n\n    if (!e.target.id) {\n    } else if (e.target.id === 'cvv') {\n      elements.forEach(ele => {\n        ele.style.visibility = 'hidden';\n      });\n\n      card.classList.add('flip');\n      card2.classList.add('flip');\n\n      setTimeout(function() {\n        backEle.style.visibility = 'visible';\n      }, 500);\n    } else {\n      setTimeout(function() {\n        elements.forEach(ele => {\n          ele.style.visibility = 'visible';\n        });\n      }, 500);\n\n      card.classList.remove('flip');\n      card2.classList.remove('flip');\n      backEle.style.visibility = 'hidden';\n    }\n  }\n\n  makeActive(e) {\n    this.flipCard(e);\n    let actives = Array.from(document.getElementsByClassName('active'));\n\n    if (actives.length > 0) {\n      actives.forEach(ele => {\n        ele.classList.remove('active');\n      });\n    }\n\n    let element = document.getElementsByClassName(\n      e.target.classList + 'Card'\n    )[0];\n\n    if (element) {\n      element.classList.add('active');\n    }\n  }\n\n  numbersOnly(e) {\n    let element = e.target;\n    let regex = /[^0-9]/gi;\n    element.value = element.value.replace(regex, '');\n  }\n\n  handleChange(e) {\n    let key = e.target.id;\n    let value = e.target.value;\n    let split;\n\n    switch (key) {\n      case 'firstInput':\n        split = value.split('');\n        this.setState({\n          one: split[0],\n          two: split[1],\n          three: split[2],\n          four: split[3]\n        });\n        break;\n      case 'secondInput':\n        split = value.split('');\n        this.setState({\n          five: split[0],\n          six: split[1],\n          seven: split[2],\n          eight: split[3]\n        });\n        break;\n      case 'thirdInput':\n        split = value.split('');\n        this.setState({\n          nine: split[0],\n          ten: split[1],\n          eleven: split[2],\n          twelve: split[3]\n        });\n        break;\n      case 'fourthInput':\n        split = value.split('');\n        this.setState({\n          thirteen: split[0],\n          fourteen: split[1],\n          fifteen: split[2],\n          sixteen: split[3]\n        });\n        break;\n      case 'cvv':\n        split = value.split('');\n        this.setState({\n          cvv1: split[0],\n          cvv2: split[1],\n          cvv3: split[2]\n        });\n        break;\n      default:\n        this.setState({\n          [key]: value\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div onClick={this.makeActive}>\n        <Card info={this.state} />\n        <form\n          className='cardForm'\n          autoComplete='off'\n          onSubmit={this.formSubmit}\n        >\n          <div className='formContent'>\n            <div className='cardNumberSection'>\n              <label className='numberLabel'>Number</label>\n              <div className='cardNumbers'>\n                <input\n                  type='text'\n                  className='numberInput'\n                  name=''\n                  id='firstInput'\n                  maxlength='4'\n                  onKeyPress={this.numbersOnly}\n                  onChange={this.handleChange}\n                  onClick={this.makeActive}\n                />\n                <input\n                  type='text'\n                  className='numberInput'\n                  name=''\n                  id='secondInput'\n                  maxlength='4'\n                  onKeyPress={this.numbersOnly}\n                  onChange={this.handleChange}\n                  onClick={this.makeActive}\n                />\n                <input\n                  type='text'\n                  className='numberInput'\n                  name=''\n                  id='thirdInput'\n                  maxlength='4'\n                  onKeyPress={this.numbersOnly}\n                  onChange={this.handleChange}\n                  onClick={this.makeActive}\n                />\n                <input\n                  type='text'\n                  className='numberInput'\n                  name=''\n                  id='fourthInput'\n                  maxlength='4'\n                  onKeyPress={this.numbersOnly}\n                  onChange={this.handleChange}\n                  onClick={this.makeActive}\n                />\n              </div>\n            </div>\n            <div className='cardHolderSection'>\n              <label className='cardHolderLabel'>Cardholder</label>\n              <input\n                type='text'\n                className='cardHolder'\n                name=''\n                id='cardHolder'\n                maxlength='28'\n                onChange={this.handleChange}\n                onClick={this.makeActive}\n              />\n            </div>\n            <div className='selectorSection'>\n              <div className='expireSection'>\n                <label className='expireLabel'>Expiration Date</label>\n                <div className='expireItems'>\n                  <select\n                    name=''\n                    id='monthSelector'\n                    className='expirationSection'\n                    onChange={this.handleChange}\n                    onClick={this.makeActive}\n                  >\n                    <option value='MM' selected disabled>\n                      Month\n                    </option>\n                  </select>\n\n                  <select\n                    name=''\n                    id='yearSelector'\n                    className='expirationSection'\n                    onChange={this.handleChange}\n                    onClick={this.makeActive}\n                  >\n                    <option value='YY' selected disabled>\n                      Year\n                    </option>\n                  </select>\n                </div>\n              </div>\n\n              <div className='cvvSection'>\n                <label className='cvvLabel'>CVV</label>\n                <input\n                  type='text'\n                  className='cvv'\n                  name=''\n                  id='cvv'\n                  maxlength='3'\n                  onChange={this.handleChange}\n                  onKeyPress={this.numbersOnly}\n                  onClick={this.makeActive}\n                />\n              </div>\n            </div>\n\n            <button className='submitButton'>Submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CardForm;\n","import React from 'react';\nimport Form from './components/form/form.jsx'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}