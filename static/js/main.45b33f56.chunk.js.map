{"version":3,"sources":["assets/creditCardImg.png","components/card/card.jsx","components/form/form.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","info","cardHolder","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","monthSelector","yearSelector","cvv1","cvv2","cvv3","cvv4","className","src","CardImg","alt","CardForm","state","handleChange","bind","numbersOnly","makeActive","formSubmit","months","document","getElementById","years","monthNum","toString","option","createElement","value","text","add","yearNum","slice","e","preventDefault","window","alert","actives","Array","from","getElementsByClassName","length","forEach","ele","classList","remove","element","target","replace","split","key","id","this","setState","onClick","autoComplete","onSubmit","type","name","maxlength","onKeyPress","onChange","selected","disabled","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45b33f56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/creditCardImg.30c29b2b.png\";","import React from 'react';\nimport CardImg from './../../assets/creditCardImg.png';\nimport './card.css';\n\nexport default function Card(props) {\n  let {\n    cardHolder,\n    one,\n    two,\n    three,\n    four,\n    five,\n    six,\n    seven,\n    eight,\n    nine,\n    ten,\n    eleven,\n    twelve,\n    thirteen,\n    fourteen,\n    fifteen,\n    sixteen,\n    monthSelector,\n    yearSelector,\n    cvv1,\n    cvv2,\n    cvv3,\n    cvv4\n  } = props.info;\n\n  return (\n    <div className='cardSectionOverall'>\n      <img className='cardImg' src={CardImg} alt='' />\n      <div className='cardHolderCard'>\n        <p className='cardHolderTitle text'>Cardholder</p>\n        <p className='nameInput text'>{cardHolder}</p>\n      </div>\n      <div className='numberInputCard'>\n        <div className='firstSect cardSection'>\n          <p className='oneCard text'>{one || '#'}</p>\n          <p className='twoCard text'>{two || '#'}</p>\n          <p className='threeCard text'>{three || '#'}</p>\n          <p className='fourCard text'>{four || '#'}</p>\n        </div>\n        <div className='secondCard cardSection'>\n          <p className='fiveCard text'>{five || '#'}</p>\n          <p className='sixCard text'>{six || '#'}</p>\n          <p className='sevenCard text'>{seven || '#'}</p>\n          <p className='eightCard text'>{eight || '#'}</p>\n        </div>\n        <div className='thirdCard cardSection'>\n          <p className='nineCard text'>{nine || '#'}</p>\n          <p className='tenCard text'>{ten || '#'}</p>\n          <p className='elevenCard text'>{eleven || '#'}</p>\n          <p className='twelveCard text'>{twelve || '#'}</p>\n        </div>\n        <div className='fourthCard cardSection'>\n          <p className='thirteenCard text'>{thirteen || '#'}</p>\n          <p className='fourteenCard text'>{fourteen || '#'}</p>\n          <p className='fifteenCard text'>{fifteen || '#'}</p>\n          <p className='sixteenCard text'>{sixteen || '#'}</p>\n        </div>\n      </div>\n      <div className='expirationSectionCard'>\n        <p className='expirationTitle text'>Expires</p>\n        <div className='expirationChange'>\n          <p className='expItm text'>{monthSelector || 'MM'}</p>\n          <p className='expItm text'>/</p>\n          <p className='expItm text'>{yearSelector || 'YY'}</p>\n        </div>\n      </div>\n      <div className='cvvCard text'>\n        <p>{cvv1 || '#'}</p>\n        <p>{cvv2 || '#'}</p>\n        <p>{cvv3 || '#'}</p>\n        <p>{cvv4 || '#'}</p>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Card from '../card/card.jsx';\nimport './form.css';\n\nclass CardForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.handleChange = this.handleChange.bind(this);\n    this.numbersOnly = this.numbersOnly.bind(this);\n    this.makeActive = this.makeActive.bind(this);\n    this.formSubmit = this.formSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    let months = document.getElementById('monthSelector');\n    let years = document.getElementById('yearSelector');\n\n    for (let monthNum = 1; monthNum <= 12; monthNum++) {\n      if (monthNum < 10) monthNum = '0' + monthNum.toString();\n      let option = document.createElement('option');\n      option.value = monthNum;\n      option.text = monthNum;\n      months.add(option);\n    }\n\n    for (let yearNum = 2019; yearNum <= 2030; yearNum++) {\n      let option = document.createElement('option');\n      option.value = yearNum.toString().slice(2);\n      option.text = yearNum;\n      years.add(option);\n    }\n  }\n\n  formSubmit(e) {\n    e.preventDefault();\n    window.alert('Wow, cool card!');\n  }\n\n  makeActive(e) {\n    let actives = Array.from(document.getElementsByClassName('active'));\n\n    if (actives.length > 0) {\n      actives.forEach(ele => {\n        ele.classList.remove('active');\n      });\n    }\n\n    let element = document.getElementsByClassName(\n      e.target.classList + 'Card'\n    )[0];\n    if (element) {\n      element.classList.add('active');\n    }\n  }\n\n  numbersOnly(e) {\n    let element = e.target;\n    let regex = /[^0-9]/gi;\n    element.value = element.value.replace(regex, '');\n  }\n\n  handleChange(e) {\n    let key = e.target.id;\n    let value = e.target.value;\n    let split;\n\n    switch (key) {\n      case 'firstInput':\n        split = value.split('');\n        this.setState({\n          one: split[0],\n          two: split[1],\n          three: split[2],\n          four: split[3]\n        });\n        break;\n      case 'secondInput':\n        split = value.split('');\n        this.setState({\n          five: split[0],\n          six: split[1],\n          seven: split[2],\n          eight: split[3]\n        });\n        break;\n      case 'thirdInput':\n        split = value.split('');\n        this.setState({\n          nine: split[0],\n          ten: split[1],\n          eleven: split[2],\n          twelve: split[3]\n        });\n        break;\n      case 'fourthInput':\n        split = value.split('');\n        this.setState({\n          thirteen: split[0],\n          fourteen: split[1],\n          fifteen: split[2],\n          sixteen: split[3]\n        });\n        break;\n      case 'cvv':\n        split = value.split('');\n        this.setState({\n          cvv1: split[0],\n          cvv2: split[1],\n          cvv3: split[2],\n          cvv4: split[3]\n        });\n        break;\n      default:\n        this.setState({\n          [key]: value\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div onClick={this.makeActive}>\n        <Card info={this.state} />\n        <form\n          className='cardForm'\n          autoComplete='off'\n          onSubmit={this.formSubmit}\n        >\n          <div className='formContent'>\n            <div className='cardNumberSection'>\n              <label className='numberLabel'>Number</label>\n              <div className='cardNumbers'>\n                <input\n                  type='text'\n                  className='numberInput'\n                  name=''\n                  id='firstInput'\n                  maxlength='4'\n                  onKeyPress={this.numbersOnly}\n                  onChange={this.handleChange}\n                  onClick={this.makeActive}\n                />\n                <input\n                  type='text'\n                  className='numberInput'\n                  name=''\n                  id='secondInput'\n                  maxlength='4'\n                  onKeyPress={this.numbersOnly}\n                  onChange={this.handleChange}\n                  onClick={this.makeActive}\n                />\n                <input\n                  type='text'\n                  className='numberInput'\n                  name=''\n                  id='thirdInput'\n                  maxlength='4'\n                  onKeyPress={this.numbersOnly}\n                  onChange={this.handleChange}\n                  onClick={this.makeActive}\n                />\n                <input\n                  type='text'\n                  className='numberInput'\n                  name=''\n                  id='fourthInput'\n                  maxlength='4'\n                  onKeyPress={this.numbersOnly}\n                  onChange={this.handleChange}\n                  onClick={this.makeActive}\n                />\n              </div>\n            </div>\n            <div className='cardHolderSection'>\n              <label className='cardHolderLabel'>Cardholder</label>\n              <input\n                type='text'\n                className='cardHolder'\n                name=''\n                id='cardHolder'\n                maxlength='28'\n                onChange={this.handleChange}\n                onClick={this.makeActive}\n              />\n            </div>\n            <div className='selectorSection'>\n              <div className='expireSection'>\n                <label className='expireLabel'>Expiration Date</label>\n                <div className='expireItems'>\n                  <select\n                    name=''\n                    id='monthSelector'\n                    className='expirationSection'\n                    onChange={this.handleChange}\n                    onClick={this.makeActive}\n                  >\n                    <option value='MM' selected disabled>\n                      Month\n                    </option>\n                  </select>\n\n                  <select\n                    name=''\n                    id='yearSelector'\n                    className='expirationSection'\n                    onChange={this.handleChange}\n                    onClick={this.makeActive}\n                  >\n                    <option value='YY' selected disabled>\n                      Year\n                    </option>\n                  </select>\n                </div>\n              </div>\n\n              <div className='cvvSection'>\n                <label className='cvvLabel'>CVV</label>\n                <input\n                  type='text'\n                  className='cvv'\n                  name=''\n                  id='cvv'\n                  maxlength='4'\n                  onChange={this.handleChange}\n                  onKeyPress={this.numbersOnly}\n                  onClick={this.makeActive}\n                />\n              </div>\n            </div>\n            <button className='submitButton'>Submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CardForm;\n","import React from 'react';\nimport Form from './components/form/form.jsx'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}